[
    {
        "id": "b07d4603f9e21fa9",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f4295493b9317073",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "63a029640d5e870a",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d94404e769aeb0e3",
        "type": "tab",
        "label": "Flow 4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ead89403f19bf54d",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e86f2fd3a1430210",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "4a24fb16ec28e780",
        "type": "ui_group",
        "name": "ui-grup",
        "tab": "ead89403f19bf54d",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "82e8868c9dc7bdc3",
        "type": "ui_group",
        "name": "–í–≤–æ–¥ –ø–æ–∫–∞–∑–∞–Ω–∏–π",
        "tab": "ead89403f19bf54d",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0eb530cb159fd223",
        "type": "ui_button",
        "z": "b07d4603f9e21fa9",
        "name": "",
        "group": "4a24fb16ec28e780",
        "order": 1,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è",
        "tooltip": "–ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è",
        "color": "#FFFFFF",
        "bgcolor": "#4CAF50",
        "className": "",
        "icon": "",
        "payload": "submit",
        "payloadType": "str",
        "topic": "save_reading",
        "topicType": "str",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "b6db91772ee738fc"
            ]
        ]
    },
    {
        "id": "b6db91772ee738fc",
        "type": "function",
        "z": "b07d4603f9e21fa9",
        "name": "–í–∞–ª–∏–¥–∞—Ü–∏—è",
        "func": "// –û–¢–õ–ê–î–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–¥ –≤–æ–æ–±—â–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è\nnode.warn(\"üöÄ –ö–æ–¥ –∑–∞–ø—É—â–µ–Ω! Topic: \" + msg.topic + \", Payload: \" + JSON.stringify(msg.payload));\n\n// 1. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—è –ø–æ–∫–∞–∑–∞–Ω–∏–π\nif (msg.topic === \"meter_reading\") {\n    node.warn(\"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∫–∞–∑–∞–Ω–∏—è: \" + msg.payload);\n    let reading = msg.payload;\n    // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ\n    if (typeof reading === 'string') {\n        reading = parseFloat(reading.replace(',', '.'));\n    }\n    flow.set('current_reading', reading);\n    node.warn(\"‚úÖ –ü–æ–∫–∞–∑–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: \" + reading);\n    return null;\n}\n\n// 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞\nif (msg.topic === \"operator_name\") {\n    node.warn(\"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: \" + msg.payload);\n    flow.set('current_operator', msg.payload);\n    node.warn(\"‚úÖ –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω: \" + msg.payload);\n    return null;\n}\n\n// 3. –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏\nif (msg.topic === \"save_reading\") {\n    node.warn(\"üî• –ù–ê–ß–ê–õ–ê–°–¨ –í–ê–õ–ò–î–ê–¶–ò–Ø!\");\n\n    const meterReading = flow.get('current_reading');\n    const operator = flow.get('current_operator') || '';\n\n    node.warn(\"üìä –°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –ø–æ–∫–∞–∑–∞–Ω–∏—è=\" + meterReading + \", –æ–ø–µ—Ä–∞—Ç–æ—Ä=\" + operator);\n\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è\n    const errors = [];\n\n    if (!meterReading || isNaN(meterReading) || meterReading <= 0) {\n        errors.push('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞');\n    }\n\n    if (operator.trim() === '') {\n        errors.push('–£–∫–∞–∂–∏—Ç–µ –∫—Ç–æ —Å–Ω–∏–º–∞–ª –ø–æ–∫–∞–∑–∞–Ω–∏—è');\n    }\n\n    node.warn(\"üîç –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: \" + JSON.stringify(errors));\n\n    if (errors.length > 0) {\n        node.warn(\"‚ùå –ï—Å—Ç—å –æ—à–∏–±–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ\");\n        const errorMsg = {\n            payload: {\n                error: true,\n                message: errors.join('; ')\n            }\n        };\n        return [errorMsg, null];\n    }\n\n    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞\n    node.warn(\"üìÇ –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª...\");\n    const fileData = flow.get('readings_main_electric', 'file') || {};\n\n    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç —Å —á–∏—Å–ª–æ–≤—ã–º–∏ –∫–ª—é—á–∞–º–∏ –≤ –º–∞—Å—Å–∏–≤\n    let lastReadings = [];\n    if (typeof fileData === 'object' && Object.keys(fileData).length > 0) {\n        if (Array.isArray(fileData)) {\n            lastReadings = fileData;\n        } else {\n            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤ –ø–æ —á–∏—Å–ª–æ–≤—ã–º –∫–ª—é—á–∞–º\n            const keys = Object.keys(fileData).filter(key => !isNaN(key)).sort((a, b) => parseInt(a) - parseInt(b));\n            lastReadings = keys.map(key => fileData[key]);\n            node.warn(\"‚úÖ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–ª–∏ –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–æ–≤: \" + lastReadings.length);\n        }\n    }\n\n    node.warn(\"üìä –ò—Ç–æ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –º–∞—Å—Å–∏–≤–µ: \" + lastReadings.length);\n    const lastReading = lastReadings[lastReadings.length - 1];\n    node.warn(\"üéØ –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: \" + JSON.stringify(lastReading));\n\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö\n    if (lastReading && meterReading <= lastReading.value) {\n        node.warn(\"‚ùå –ü–æ–∫–∞–∑–∞–Ω–∏—è –º–µ–Ω—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö!\");\n        const errorMsg = {\n            payload: {\n                error: true,\n                message: `–ü–æ–∫–∞–∑–∞–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö (${lastReading.value} –∫–í—Ç¬∑—á)`\n            }\n        };\n        return [errorMsg, null];\n    }\n\n    // –§–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ\n    const validatedData = {\n        meterId: 'main_electric',\n        reading: parseFloat(meterReading),\n        operator: operator.trim(),\n        timestamp: Date.now(),\n        date: new Date().toLocaleString('ru-RU'),\n        source: 'dashboard'\n    };\n    // –í—Ç–æ—Ä–æ–π –≤—ã—Ö–æ–¥ - –∫ —É–∑–ª—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è\n    return [null, { payload: validatedData }];\n}\n\n    // node.warn(\"üìã –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã: \" + JSON.stringify(validatedData));\n\n    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è\n//     if (lastReading) {\n//         node.warn(\"üßÆ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—á–µ—Ç –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è...\");\n//         const consumption = validatedData.reading - lastReading.value;\n//         const timeDiff = validatedData.timestamp - lastReading.timestamp;\n//         const days = timeDiff / (1000 * 60 * 60 * 24);\n\n//         validatedData.consumption = Math.round(consumption * 100) / 100;\n//         validatedData.daysSinceLastReading = Math.round(days * 10) / 10;\n//         validatedData.avgDailyConsumption = days > 0 ? Math.round((consumption / days) * 100) / 100 : 0;\n//         validatedData.lastReading = lastReading.value;\n\n//         node.warn(`üßÆ –†–∞—Å—á–µ—Ç: ${validatedData.reading} - ${lastReading.value} = ${consumption}`);\n//         node.warn(`üìÖ –î–Ω–µ–π: ${days.toFixed(2)}, –°—Ä–µ–¥–Ω–µ–µ: ${validatedData.avgDailyConsumption}`);\n//         node.warn(\"‚úÖ –†–∞—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!\");\n//     } else {\n//         node.warn(\"‚ö†Ô∏è –ù–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è\");\n//     }\n\n//     const successMsg = {\n//         payload: validatedData\n//     };\n\n//     node.warn(\"üéâ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: \" + JSON.stringify(successMsg));\n//     return [null, successMsg];\n// }\n\n// node.warn(\"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π topic: \" + msg.topic);\nreturn null;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 220,
        "wires": [
            [
                "b11efb526fc1cbcd"
            ],
            [
                "080dc9e30d685a8b"
            ]
        ]
    },
    {
        "id": "080dc9e30d685a8b",
        "type": "function",
        "z": "b07d4603f9e21fa9",
        "name": "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
        "func": "// –£–ó–ï–õ \"–°–û–•–†–ê–ù–ï–ù–ò–ï\" - –ü–ï–†–ï–•–û–î –ù–ê MEMORY STORAGE\n\nconst data = msg.payload;\nnode.warn(\"üíæ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...\");\n\nlet readings = [];\n\ntry {\n    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º memory storage\n    let memoryData = flow.get('readings_main_electric') || [];\n    \n    // –ü–æ—Ç–æ–º –ø—Ä–æ–±—É–µ–º file storage\n    let fileData = flow.get('readings_main_electric', 'file') || {};\n    \n    node.warn(\"üìÅ Memory storage: \" + (Array.isArray(memoryData) ? memoryData.length : \"–Ω–µ –º–∞—Å—Å–∏–≤\"));\n    node.warn(\"üìÅ File storage: —Ç–∏–ø=\" + typeof fileData + \", –∫–ª—é—á–∏=\" + Object.keys(fileData).length);\n    \n    // –ò—Å–ø–æ–ª—å–∑—É–µ–º memory storage –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π\n    if (Array.isArray(memoryData) && memoryData.length > 0) {\n        readings = memoryData;\n        node.warn(\"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º memory storage: \" + readings.length + \" –∑–∞–ø–∏—Å–µ–π\");\n    } else if (typeof fileData === 'object' && Object.keys(fileData).length > 0) {\n        // Fallback –Ω–∞ file storage\n        if (Array.isArray(fileData)) {\n            readings = fileData;\n        } else {\n            const keys = Object.keys(fileData).filter(key => !isNaN(key)).sort((a, b) => parseInt(a) - parseInt(b));\n            readings = keys.map(key => fileData[key]);\n        }\n        node.warn(\"üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –∏–∑ file storage: \" + readings.length + \" –∑–∞–ø–∏—Å–µ–π\");\n    } else {\n        node.warn(\"üìù –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤\");\n    }\n    \n} catch (error) {\n    node.error(\"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: \" + error.message);\n    readings = [];\n}\n\n// –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å\nconst newReading = {\n    id: `reading_${data.timestamp}`,\n    meterId: data.meterId,\n    value: data.reading,\n    operator: data.operator,\n    timestamp: data.timestamp,\n    date: data.date,\n    source: data.source,\n    validated: true\n};\n\nreadings.push(newReading);\nreadings.sort((a, b) => a.timestamp - b.timestamp);\n\nif (readings.length > 1000) {\n    readings = readings.slice(-1000);\n}\n\nnode.warn(\"üìä –ò—Ç–æ–≥–æ –∑–∞–ø–∏—Å–µ–π –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: \" + readings.length);\n\n// –î–í–û–ô–ù–û–ï –°–û–•–†–ê–ù–ï–ù–ò–ï: memory + file + global\ntry {\n    // –û—Å–Ω–æ–≤–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ - memory\n    flow.set('readings_main_electric', readings);\n    node.warn(\"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ memory storage\");\n    \n    // –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ file storage\n    flow.set('readings_main_electric', readings, 'file');\n    node.warn(\"‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–æ –≤ file storage\");\n    \n    // –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ global storage\n    global.set('readings_main_electric', readings);\n    node.warn(\"‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–æ –≤ global storage\");\n    \n    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è\n    const checkMemory = flow.get('readings_main_electric') || [];\n    const checkFile = flow.get('readings_main_electric', 'file') || {};\n    const checkGlobal = global.get('readings_main_electric') || [];\n    \n    node.warn(\"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:\");\n    node.warn(\"  Memory: \" + (Array.isArray(checkMemory) ? checkMemory.length : \"–Ω–µ –º–∞—Å—Å–∏–≤\"));\n    node.warn(\"  File: \" + (Array.isArray(checkFile) ? checkFile.length : Object.keys(checkFile).length));\n    node.warn(\"  Global: \" + (Array.isArray(checkGlobal) ? checkGlobal.length : \"–Ω–µ –º–∞—Å—Å–∏–≤\"));\n    \n} catch (error) {\n    node.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: \" + error.message);\n}\n\nreturn {\n    payload: {\n        success: true,\n        reading: data.reading,\n        operator: data.operator,\n        timestamp: data.timestamp,\n        totalReadings: readings.length,\n        message: `–ü–æ–∫–∞–∑–∞–Ω–∏—è ${data.reading} –∫–í—Ç¬∑—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!`\n    }\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            [
                "c0bd619211d46e21",
                "7079e0341a145ceb"
            ]
        ]
    },
    {
        "id": "7079e0341a145ceb",
        "type": "link out",
        "z": "b07d4603f9e21fa9",
        "name": "–ö —Ä–∞—Å—á–µ—Ç–∞–º",
        "mode": "link",
        "links": [
            "b0b132cd223ce431"
        ],
        "x": 595,
        "y": 400,
        "wires": []
    },
    {
        "id": "c0bd619211d46e21",
        "type": "ui_toast",
        "z": "b07d4603f9e21fa9",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "–£—Å–ø–µ—Ö",
        "x": 350,
        "y": 460,
        "wires": []
    },
    {
        "id": "b11efb526fc1cbcd",
        "type": "ui_toast",
        "z": "b07d4603f9e21fa9",
        "position": "top right",
        "displayTime": "5",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "–û—à–∏–±–∫–∞",
        "x": 360,
        "y": 500,
        "wires": []
    },
    {
        "id": "8278fbae390999fe",
        "type": "ui_text_input",
        "z": "b07d4603f9e21fa9",
        "name": "Operator",
        "label": "–ö—Ç–æ —Å–Ω–∏–º–∞–ª –ø–æ–∫–∞–∑–∞–Ω–∏—è",
        "tooltip": "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è",
        "group": "82e8868c9dc7bdc3",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "operator_name",
        "sendOnBlur": false,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "b6db91772ee738fc"
            ]
        ]
    },
    {
        "id": "e19d10eadf7b6ba4",
        "type": "ui_text_input",
        "z": "b07d4603f9e21fa9",
        "name": "–ü–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞",
        "label": "–ü–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞",
        "tooltip": "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è",
        "group": "4a24fb16ec28e780",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "meter_reading",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "b6db91772ee738fc"
            ]
        ]
    },
    {
        "id": "45c06951fdd468c1",
        "type": "inject",
        "z": "b07d4603f9e21fa9",
        "name": "–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "test_data",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "ac6199d6d1efbed6"
            ]
        ]
    },
    {
        "id": "ac6199d6d1efbed6",
        "type": "function",
        "z": "b07d4603f9e21fa9",
        "name": "function 1",
        "func": "// FUNCTION NODE: \"–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\"\n\nnode.warn(\"üéØ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ...\");\n\n// –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ\nlet readings = global.get('readings_main_electric') || [];\nnode.warn(\"üìä –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ: \" + readings.length + \" –∑–∞–ø–∏—Å–µ–π\");\n\n// –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ–∑–∞–≤—á–µ—Ä–∞\nconst dayBefore = new Date();\ndayBefore.setDate(dayBefore.getDate() - 2);\nconst dayBeforeStr = dayBefore.toISOString().split('T')[0];\n\nconst testDataDayBefore = [\n    {\n        id: `reading_test_${dayBefore.getTime()}`,\n        meterId: 'main_electric',\n        value: 900,  // –ù–∞—á–∞–ª–æ –ø–æ–∑–∞–≤—á–µ—Ä–∞\n        operator: 'TestUser',\n        timestamp: dayBefore.getTime(),\n        date: `${dayBeforeStr}, 08:00:00`,\n        source: 'test',\n        validated: true\n    },\n    {\n        id: `reading_test_${dayBefore.getTime() + 50400000}`, // +14 —á–∞—Å–æ–≤\n        meterId: 'main_electric',\n        value: 930,  // –ö–æ–Ω–µ—Ü –ø–æ–∑–∞–≤—á–µ—Ä–∞ (–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ 30 –∫–í—Ç¬∑—á)\n        operator: 'TestUser',\n        timestamp: dayBefore.getTime() + 50400000,\n        date: `${dayBeforeStr}, 22:00:00`,\n        source: 'test',\n        validated: true\n    }\n];\n\n// –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –≤—á–µ—Ä–∞\nconst yesterday = new Date();\nyesterday.setDate(yesterday.getDate() - 1);\nconst yesterdayStr = yesterday.toISOString().split('T')[0];\n\nconst testDataYesterday = [\n    {\n        id: `reading_test_${yesterday.getTime()}`,\n        meterId: 'main_electric',\n        value: 930,  // –ù–∞—á–∞–ª–æ –≤—á–µ—Ä–∞ (—Ä–∞–≤–Ω–æ –∫–æ–Ω—Ü—É –ø–æ–∑–∞–≤—á–µ—Ä–∞)\n        operator: 'TestUser',\n        timestamp: yesterday.getTime(),\n        date: `${yesterdayStr}, 08:30:00`,\n        source: 'test',\n        validated: true\n    },\n    {\n        id: `reading_test_${yesterday.getTime() + 54000000}`, // +15 —á–∞—Å–æ–≤\n        meterId: 'main_electric',\n        value: 955,  // –ö–æ–Ω–µ—Ü –≤—á–µ—Ä–∞ (–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ 25 –∫–í—Ç¬∑—á)\n        operator: 'TestUser',\n        timestamp: yesterday.getTime() + 54000000,\n        date: `${yesterdayStr}, 23:30:00`,\n        source: 'test',\n        validated: true\n    }\n];\n\n// –§–∏–ª—å—Ç—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)\nconst realReadings = readings.filter(r => r.source !== 'test');\n\n// –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ\nconst allData = [...testDataDayBefore, ...testDataYesterday, ...realReadings];\nallData.sort((a, b) => a.timestamp - b.timestamp);\n\n// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Å–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞\ntry {\n    global.set('readings_main_electric', allData);\n    flow.set('readings_main_electric', allData);\n    flow.set('readings_main_electric', allData, 'file');\n    \n    node.warn(\"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã:\");\n    node.warn(`  ${dayBeforeStr}: 900 ‚Üí 930 –∫–í—Ç¬∑—á (30 –∫–í—Ç¬∑—á –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ)`);\n    node.warn(`  ${yesterdayStr}: 930 ‚Üí 955 –∫–í—Ç¬∑—á (25 –∫–í—Ç¬∑—á –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ)`);\n    node.warn(\"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: \" + allData.length);\n    node.warn(\"üìã –†–µ–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: \" + realReadings.length);\n    node.warn(\"üìã –¢–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: \" + (allData.length - realReadings.length));\n    \n} catch (error) {\n    node.error(\"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: \" + error.message);\n}\n\nreturn { \n    payload: { \n        success: true, \n        message: \"–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã\",\n        totalRecords: allData.length,\n        testRecords: allData.length - realReadings.length\n    } \n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b0b132cd223ce431",
        "type": "link in",
        "z": "f4295493b9317073",
        "name": "–æ—Ç Flow 1",
        "links": [
            "7079e0341a145ceb"
        ],
        "x": 155,
        "y": 120,
        "wires": [
            [
                "db63c1e8f79d07d6"
            ]
        ]
    },
    {
        "id": "db63c1e8f79d07d6",
        "type": "function",
        "z": "f4295493b9317073",
        "name": "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö",
        "func": "// –£–ó–ï–õ \"–ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•\" - –ü–û–õ–ù–´–ô –ö–û–î\n\nnode.warn(\"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö...\");\n\nconst data = msg.payload;\n\n// ========== –ë–õ–û–ö 1: –ü–û–ò–°–ö –î–ê–ù–ù–´–• ==========\nlet allReadings = [];\nlet dataSource = \"–Ω–µ –Ω–∞–π–¥–µ–Ω\";\n\ntry {\n    // –ü–æ–ø—ã—Ç–∫–∞ 1: Memory storage\n    let memoryData = flow.get('readings_main_electric') || [];\n    if (Array.isArray(memoryData) && memoryData.length > 0) {\n        allReadings = memoryData;\n        dataSource = \"memory storage\";\n    }\n    \n    // –ü–æ–ø—ã—Ç–∫–∞ 2: Global storage\n    if (allReadings.length === 0) {\n        let globalData = global.get('readings_main_electric') || [];\n        if (Array.isArray(globalData) && globalData.length > 0) {\n            allReadings = globalData;\n            dataSource = \"global storage\";\n        }\n    }\n    \n    // –ü–æ–ø—ã—Ç–∫–∞ 3: File storage\n    if (allReadings.length === 0) {\n        let fileData = flow.get('readings_main_electric', 'file') || {};\n        if (Array.isArray(fileData)) {\n            allReadings = fileData;\n            dataSource = \"file storage (–º–∞—Å—Å–∏–≤)\";\n        } else if (typeof fileData === 'object' && Object.keys(fileData).length > 0) {\n            const keys = Object.keys(fileData).filter(key => !isNaN(key)).sort((a, b) => parseInt(a) - parseInt(b));\n            if (keys.length > 0) {\n                allReadings = keys.map(key => fileData[key]);\n                dataSource = \"file storage (–æ–±—ä–µ–∫—Ç)\";\n            }\n        }\n    }\n    \n} catch (error) {\n    node.error(\"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö: \" + error.message);\n}\n\nnode.warn(\"üìä –ò–¢–û–ì–û –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: \" + allReadings.length + \" –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞: \" + dataSource);\n\nif (allReadings.length === 0) {\n    node.warn(\"‚ö†Ô∏è –ù–ï–¢ –î–ê–ù–ù–´–• –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê!\");\n    return null;\n}\n\nnode.warn(\"üìã –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: \" + JSON.stringify(allReadings[0]));\nnode.warn(\"üìã –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: \" + JSON.stringify(allReadings[allReadings.length - 1]));\n\n// ========== –ë–õ–û–ö 2: –ì–†–£–ü–ü–ò–†–û–í–ö–ê –ü–û –î–ù–Ø–ú ==========\nnode.warn(\"üìÖ –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–∫–∞–∑–∞–Ω–∏—è –ø–æ –¥–Ω—è–º...\");\n\nfunction groupByDays(readings) {\n    const groups = {};\n    try {\n        readings.forEach((reading, index) => {\n            if (!reading.timestamp) {\n                node.warn(`‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å ${index} –±–µ–∑ timestamp`);\n                return;\n            }\n            \n            const date = new Date(reading.timestamp);\n            if (isNaN(date.getTime())) {\n                node.warn(`‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞ –≤ –∑–∞–ø–∏—Å–∏ ${index}: ${reading.timestamp}`);\n                return;\n            }\n            \n            const dayKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n            \n            if (!groups[dayKey]) {\n                groups[dayKey] = [];\n            }\n            groups[dayKey].push(reading);\n        });\n    } catch (error) {\n        node.error(\"‚ùå –û—à–∏–±–∫–∞ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏: \" + error.message);\n    }\n    return groups;\n}\n\nconst dayGroups = groupByDays(allReadings);\nconst dayKeys = Object.keys(dayGroups).sort();\n\nnode.warn(\"üìä –î–Ω–µ–π —Å –ø–æ–∫–∞–∑–∞–Ω–∏—è–º–∏: \" + dayKeys.length);\nnode.warn(\"üìÖ –î–∞—Ç—ã: \" + dayKeys.join(', '));\n\n// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å\nconst today = new Date().toISOString().split('T')[0];\nnode.warn(\"üìÜ –°–µ–≥–æ–¥–Ω—è: \" + today);\n\n// ========== –ë–õ–û–ö 3: –†–ê–°–ß–ï–¢ –ó–ê–í–ï–†–®–ï–ù–ù–´–• –î–ù–ï–ô ==========\nnode.warn(\"üßÆ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º –¥–Ω—è–º...\");\n\nconst completedDays = [];\nlet totalConsumption = 0;\n\ntry {\n    for (let i = 1; i < dayKeys.length; i++) {\n        const currentDayKey = dayKeys[i];\n        const prevDayKey = dayKeys[i - 1];\n        \n        const currentDayReadings = dayGroups[currentDayKey];\n        const prevDayReadings = dayGroups[prevDayKey];\n        \n        // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è\n        const currentMax = Math.max(...currentDayReadings.map(r => r.value));\n        const prevMax = Math.max(...prevDayReadings.map(r => r.value));\n        \n        const dayConsumption = currentMax - prevMax;\n        \n        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –¥–Ω–∏ (–Ω–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π)\n        if (currentDayKey !== today) {\n            totalConsumption += dayConsumption;\n            completedDays.push({\n                date: currentDayKey,\n                consumption: Math.round(dayConsumption * 100) / 100,\n                startReading: prevMax,\n                endReading: currentMax\n            });\n            \n            node.warn(`üìä ${currentDayKey}: ${prevMax} ‚Üí ${currentMax} = ${dayConsumption} –∫–í—Ç¬∑—á`);\n        } else {\n            node.warn(`‚è∞ ${currentDayKey} (—Å–µ–≥–æ–¥–Ω—è): ${prevMax} ‚Üí ${currentMax} = ${dayConsumption} –∫–í—Ç¬∑—á - –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ–º –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π`);\n        }\n    }\n    \n    node.warn(\"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: \" + completedDays.length);\n    node.warn(\"üìà –û–±—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π: \" + totalConsumption + \" –∫–í—Ç¬∑—á\");\n    \n} catch (error) {\n    node.error(\"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π: \" + error.message);\n}\n\n// ========== –ë–õ–û–ö 4: –†–ê–°–ß–ï–¢ –¢–ï–ö–£–©–ï–ì–û –î–ù–Ø ==========\nnode.warn(\"‚è∞ –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å...\");\n\nlet currentDayData = null;\n\nif (dayGroups[today] && dayKeys.length > 1) {\n    try {\n        const todayReadings = dayGroups[today];\n        \n        // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è\n        const yesterdayKey = dayKeys[dayKeys.length - 2]; // –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π –¥–µ–Ω—å\n        const yesterdayReadings = dayGroups[yesterdayKey];\n        const yesterdayMax = Math.max(...yesterdayReadings.map(r => r.value));\n        \n        const currentReading = Math.max(...todayReadings.map(r => r.value));\n        \n        node.warn(\"üìä –î–∞–Ω–Ω—ã–µ —Å–µ–≥–æ–¥–Ω—è:\");\n        node.warn(\"  –í—á–µ—Ä–∞ (\" + yesterdayKey + \") –º–∞–∫—Å: \" + yesterdayMax);\n        node.warn(\"  –°–µ–≥–æ–¥–Ω—è (\" + today + \") –º–∞–∫—Å: \" + currentReading);\n        \n        // –†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏\n        const now = new Date();\n        const hoursElapsed = now.getHours() + (now.getMinutes() / 60) + (now.getSeconds() / 3600);\n        const safeHours = Math.max(hoursElapsed, 0.1); // –º–∏–Ω–∏–º—É–º 6 –º–∏–Ω—É—Ç\n        \n        const currentConsumption = currentReading - yesterdayMax;\n        const projectedDaily = (currentConsumption / safeHours) * 24;\n        \n        currentDayData = {\n            date: today,\n            consumption: Math.round(currentConsumption * 100) / 100,\n            hoursElapsed: Math.round(safeHours * 10) / 10,\n            projectedDaily: Math.round(projectedDaily * 100) / 100,\n            startReading: yesterdayMax,\n            currentReading: currentReading\n        };\n        \n        node.warn(\"‚úÖ –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å:\");\n        node.warn(\"  –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: \" + currentDayData.consumption + \" –∫–í—Ç¬∑—á\");\n        node.warn(\"  –ß–∞—Å–æ–≤ –ø—Ä–æ—à–ª–æ: \" + currentDayData.hoursElapsed);\n        node.warn(\"  –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–µ–Ω—å: \" + currentDayData.projectedDaily + \" –∫–í—Ç¬∑—á\");\n        \n    } catch (error) {\n        node.error(\"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è: \" + error.message);\n        currentDayData = null;\n    }\n} else {\n    if (!dayGroups[today]) {\n        node.warn(\"‚ö†Ô∏è –ù–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\");\n    }\n    if (dayKeys.length <= 1) {\n        node.warn(\"‚ö†Ô∏è –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –¥–Ω—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è\");\n    }\n}\n\n// ========== –ë–õ–û–ö 5: –°–¢–ê–¢–ò–°–¢–ò–ö–ê ==========\nnode.warn(\"üìà –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...\");\n\nconst avgDailyConsumption = completedDays.length > 0 ? \n    Math.round((totalConsumption / completedDays.length) * 100) / 100 : 0;\n\nconst statsData = {\n    totalConsumption: Math.round(totalConsumption * 100) / 100,\n    avgDailyConsumption: avgDailyConsumption,\n    totalReadings: allReadings.length,\n    completedDaysCount: completedDays.length,\n    currentDayExists: !!currentDayData,\n    daysWithData: dayKeys.length\n};\n\nnode.warn(\"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\");\nnode.warn(\"  –û–±—â–µ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: \" + statsData.totalConsumption + \" –∫–í—Ç¬∑—á\");\nnode.warn(\"  –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: \" + statsData.avgDailyConsumption + \" –∫–í—Ç¬∑—á\");\nnode.warn(\"  –í—Å–µ–≥–æ –ø–æ–∫–∞–∑–∞–Ω–∏–π: \" + statsData.totalReadings);\nnode.warn(\"  –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π: \" + statsData.completedDaysCount);\nnode.warn(\"  –î–Ω–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏: \" + statsData.daysWithData);\n\n// ========== –ë–õ–û–ö 6: –§–û–†–ú–ò–†–û–í–ê–ù–ò–ï –í–´–•–û–î–û–í ==========\nnode.warn(\"üì§ –§–æ—Ä–º–∏—Ä—É–µ–º –≤—ã—Ö–æ–¥–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...\");\n\nconst outputs = [];\n\n// –í—ã—Ö–æ–¥ 1: –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –¥–Ω–∏\nif (completedDays.length > 0) {\n    outputs[0] = { \n        payload: { \n            type: \"completed\", \n            data: completedDays \n        } \n    };\n    node.warn(\"‚úÖ –í—ã—Ö–æ–¥ 1: –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –¥–Ω–∏ (\" + completedDays.length + \" –∑–∞–ø–∏—Å–µ–π)\");\n} else {\n    outputs[0] = null;\n    node.warn(\"‚ö†Ô∏è –í—ã—Ö–æ–¥ 1: –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π\");\n}\n\n// –í—ã—Ö–æ–¥ 2: –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å\nif (currentDayData) {\n    outputs[1] = { \n        payload: { \n            type: \"current\", \n            data: currentDayData \n        } \n    };\n    node.warn(\"‚úÖ –í—ã—Ö–æ–¥ 2: —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å\");\n} else {\n    outputs[1] = null;\n    node.warn(\"‚ö†Ô∏è –í—ã—Ö–æ–¥ 2: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è\");\n}\n\n// –í—ã—Ö–æ–¥ 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å)\noutputs[2] = { \n    payload: { \n        type: \"stats\", \n        data: statsData \n    } \n};\nnode.warn(\"‚úÖ –í—ã—Ö–æ–¥ 3: —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\");\n\nnode.warn(\"üéâ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!\");\n\nreturn outputs;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 120,
        "wires": [
            [
                "0ca8ee0240a1b26d",
                "fbedfe631c9f37ca"
            ]
        ],
        "outputLabels": [
            "1"
        ]
    },
    {
        "id": "a24da7321e1980d6",
        "type": "link out",
        "z": "f4295493b9317073",
        "name": "–ö –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏",
        "mode": "link",
        "links": [],
        "x": 555,
        "y": 360,
        "wires": []
    },
    {
        "id": "0ca8ee0240a1b26d",
        "type": "switch",
        "z": "f4295493b9317073",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "\"completed",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "\"current\"",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "\"stats\"",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 120,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fbedfe631c9f37ca",
        "type": "debug",
        "z": "f4295493b9317073",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 40,
        "wires": []
    }
]